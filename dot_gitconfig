[user]
        email = github@bunkercode.com
        name = Hovis
[push]
        default = simple
[alias]
        amend = commit --amend
        br = branch
        ci = commit
        cleanup = !git branch --merged HEAD | grep  -v '\\*\\|$(git main-branch)' | xargs -r -n 1 git branch -d
        co = checkout
        diffc = diff --cached
        grep = grep -Ii # i: ignorecase, I: don't search binary files
        ignored = !git ls-files -v | grep -e '^[a-z]' # Show me ignored files
        la = "!git config -l | grep alias | cut -c 7-" # List these aliases
        ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat # A nice long format that includes files in the commit
        local-branches = !git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }' # Show me branches that are local but not remote (on Github)
        ls = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit # A really pretty short log format with branch lines
        ls-conflicts = diff --name-only --diff-filter=U
        main-branch = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
        mt = mergetool
        pushf = push --force-with-lease # see `git help push`, tl;dr is only force the push if you are the last author on the remote branch
        pushu = push --set-upstream origin HEAD
        px = "!~/bin/git-pickaxe"
        rc = rebase --continue
        ri = rebase --interactive
        rim = "!git rebase --interactive $(git main-branch) --autosquash"
        st = status
[core]
    excludesfile = .gitignore.local
    #pager = diff-so-fancy | less --tabs=2 -RFX
    pager = diff-so-fancy | less -RFX
[pager]
        stash = false # don't steal the screen when showing the stash list
